version: "3.8"

services:
  app-web:
    build:
      context: .
      dockerfile: deployment/Dockerfile
      target: runtime
    environment:
      DOCKER_USER_ID: ${DOCKER_USER_ID:-1000}
      DOCKER_GROUP_ID: ${DOCKER_GROUP_ID:-1000}
    ports:
      - 8080:80
    volumes:
      - ./:/app
  npm-watch:
    image: node
    command: bash -c 'npm run dev -- --host'
    user: "${DOCKER_USER_ID:-1000}:${DOCKER_GROUP_ID:-1000}"
    working_dir: /app
    ports:
      - 127.0.0.1:5173:5173
    volumes:
      - ./:/app
  # Uncomment if needed:
  # app-queue-worker:
  #   build:
  #     context: .
  #     dockerfile: deployment/Dockerfile
  #     target: runtime
  #   command: php artisan queue:work
  #   environment:
  #     DOCKER_USER_ID: ${DOCKER_USER_ID:-1000}
  #     DOCKER_GROUP_ID: ${DOCKER_GROUP_ID:-1000}
  #   volumes:
  #     - ./:/app
  # app-scheduler:
  #   build:
  #     context: .
  #     dockerfile: deployment/Dockerfile
  #     target: runtime
  #   command: php artisan schedule:work
  #   environment:
  #     DOCKER_USER_ID: ${DOCKER_USER_ID:-1000}
  #     DOCKER_GROUP_ID: ${DOCKER_GROUP_ID:-1000}
  #   volumes:
  #     - ./:/app
  database:
    image: mysql:8
    command: --performance-schema=1
    environment:
      MYSQL_ROOT_PASSWORD: superpassword
      MYSQL_USER: dbuser
      MYSQL_PASSWORD: dbpass
      MYSQL_DATABASE: dbname
    ports:
      - 3306:3306
    volumes:
      - database-data:/var/lib/mysql

volumes:
  database-data: null
